@model PostProductoMV
@using Microsoft.AspNetCore.Identity
@using Mascotas.Areas.Identity.Data
@inject UserManager<UserIdentity> UserManager
@inject SignInManager<UserIdentity> SignInManager
@{
    ViewData["Title"] = "COSTUMBLOG";
    var id = "0";
    var estado = 0;
    var calV = 6;
    if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.FindByNameAsync(User.Identity.Name);
        id = user.Id;
        estado = 1;
        try
        {
            if (Model.Post.Calificaciones.Count(x => x.UsuarioId.Contains(id)) == 1)
            {
                calV = Model.Post.Calificaciones.First(x => x.UsuarioId.Equals(id)).Valor;
            }
        }
        catch(NullReferenceException)
        {

        }
    }
}

<div class="row">
    <div class="col-md-8">
        <h2 class="text-center text-uppercase page-header">
            @Html.DisplayFor(itemModel => Model.Post.Titulo)
        </h2>
        <p class="text-center">
            Publicado en: @Html.DisplayFor(itemModel => Model.Post.FechaPublicacion) por CostumPet
        </p>
        <p class="text-center">
            @{
                var calificacion = 0.0;
                if (Model.Post.Calificaciones.Count > 0)
                {
                    calificacion = Model.Post.Calificaciones.Average(x => x.Valor);
                }

            }
            @if ( calificacion == 0.0)
            {
                <i class="far fa-star"></i>
            }
            else if(calificacion != Math.Floor(calificacion)) {
                for (var i=0; i < calificacion-1; i++)
                {
                    <i class="fas fa-star"></i>
                }
                <i class="fas fa-star-half-alt"></i>
            }
            else
            {
                for (var i=0; i < calificacion; i++)
                {
                    <i class="fas fa-star"></i>
                }
            }
        </p>
        <div class="container-fluid"></div>
        <span>@Html.DisplayFor(itemModel => Model.Post.Subtitulo)</span>
        <select id="star-rating">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
        </select>
        <hr>
        <div class="container-fluid">
            <div class="section-post">
                <div class="row ">
                    <div class="col-md-6">
                        <p class="underline-text title-bold">Materiales</p>
                        <br>
                        <p>Tus Materiales</p>
                        <p>@Html.DisplayFor(itemModel => Model.Post.Materiales)</p>
                    </div>
                    <div class="col-md-6">
                        <p class="underline-text title-bold">Productos</p>
                        <br>
                        <p>CostumPlus</p>
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas posuere et
                            turpis sit amet semper. Aliquam tincidunt diam eu bibendum efficitur.
                        </p>
                        <hr>
                        <div class="row">
                            @foreach (var item in Model.Productoxposts)
                            {
                                <div class="col-md-12 text-center">
                                    <img class="img-pp img-effect" src="~/images/Posts/@Html.DisplayFor(itemModel => item.Producto.Imagen.ImageUrl)" alt="producto"/>
                                    <p class="p-prod-truncate">@Html.DisplayFor(itemModel => item.Producto.Descripcion)</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br>
        <div class="container-fluid">
            <div class="section-post">
                <div class="row ">
                    <div class="col-md-12">
                        <p class="underline-text title-bold">Tutorial</p>
                        <br>
                        <p>@Html.DisplayFor(itemModel => Model.Post.Contenido)</p>
                    </div>
                    <div class="col-md-12 text-center">
                        <br>
                        <iframe width="560" height="315"
                                src="@Html.DisplayFor(itemModel => Model.Post.UrlVideo)"
                                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>
                        </iframe>
                    </div>
                </div>
            </div>
        </div>
        <div class="line-dotted"></div>
        <div class="container-fluid">
            <div class="form-commets">
                <textarea name="comment" id="comment" placeholder="Escribe tu comentario aquí"
                class="form-control" rows="4"></textarea>
                <button class="btn btn-primary float-right" type="button" id="sendC" onclick="sendComment();">Publicar</button>
            </div>
            <div class="clearfix"></div>
            <br>
            @foreach (var item in Model.Post.Comentarios)
            {
                <div class="comment">
                    <div>
                        <p>@Html.DisplayFor(modelItem => item.Mensaje)</p>
                        @if (SignInManager.IsSignedIn(User) && item.UsuarioId == id)
                        {
                            <button class="btn-link float-right" onclick="deleteComment(@item.Id);">Eliminar</button>
                        }
                        <span class="clearfix"></span>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-md-4">
       <partial name="_Aside"/>
    </div>
    <div class="modal fade modal-noaccess" tabindex="-1" role="dialog" aria-labelledby="myModalC" id="myModalC">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content text-center">
                <p>Por favor inicie sesión para poder comentar o calificar este post.</p>
            </div>
        </div>
    </div>
</div>


<script>
    var valor = 0;
    function sendComment() {
        if (@estado === 1) {
            var comment = {
                "PostId": @Model.Post.Id,
                "Mensaje": $('#comment').val(),
                "FechaPublicacion": Date.now(),
                "UsuarioId": "@id"
            }
            $.ajax({
                url: "/Costum/SaveComment",
                dataType: "json",
                type: "POST",
                success: function(msg) {
                    alert(msg);
                    location.reload();
                },
                data: comment
            });
        } else {
            $('#myModalC').modal('show');
            return (false);
        }
    }

    function deleteComment(id) {
        var r = confirm('¿Está seguro que desea borrar este comentario?');
        if (r) {
            $.ajax({
                url: "/Costum/RemoveComment/"+id+"",
                dataType: "json",
                type: "GET",
                success: function(msg) {
                    alert(msg);
                    location.reload();
                }
            });
        }
    }

    function sendRate(valor) {
        if (@estado === 1) {
            var r = confirm('Tenga en cuenta que una vez enviada la calificación esta no podrá ser modificada. ¿Desea continuar?');
            var data = {
                "PostId": @Model.Post.Id,
                "UsuarioId": "@id",
                "Valor": valor
            };
            if (r) {
                $.ajax({
                    url: "/Costum/SaveRate/",
                    dataType: "json",
                    type: "POST",
                    success: function(msg) {
                        alert(msg);
                        location.reload();
                    },
                    data: data
                });
            }
        } else {
            $('#myModalC').modal('show');
        }
    }

    if (@calV === 6) {
        $('#star-rating').barrating({
            theme: 'css-stars',
            onSelect: function(value, text, event) {
                if (typeof(event) !== 'undefined') {
                    // rating was selected by a user
                    sendRate(value);
                }
            }
        });
    } else {
        $('#star-rating').barrating('show', {
            theme: 'css-stars'
        });
        $('#star-rating').barrating('set', @calV);
        $('#star-rating').barrating('readonly', true);
    }
</script>